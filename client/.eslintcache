[{"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\index.js":"1","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\App.js":"2","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\pages\\SavedBooks.js":"3","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\pages\\SearchBooks.js":"5","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\SignupForm.js":"6","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\LoginForm.js":"7","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\queries.js":"8","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\mutations.js":"9","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\auth.js":"10","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\API.js":"11","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\localStorage.js":"12"},{"size":278,"mtime":1632930881088,"results":"13","hashOfConfig":"14"},{"size":1259,"mtime":1633564520739,"results":"15","hashOfConfig":"14"},{"size":3330,"mtime":1633493264376,"results":"16","hashOfConfig":"14"},{"size":2601,"mtime":1632930881085,"results":"17","hashOfConfig":"14"},{"size":5150,"mtime":1633564996605,"results":"18","hashOfConfig":"14"},{"size":2824,"mtime":1633408648162,"results":"19","hashOfConfig":"14"},{"size":2653,"mtime":1633492993908,"results":"20","hashOfConfig":"14"},{"size":154,"mtime":1633287835648,"results":"21","hashOfConfig":"14"},{"size":987,"mtime":1633564168381,"results":"22","hashOfConfig":"14"},{"size":761,"mtime":1633477331064,"results":"23","hashOfConfig":"14"},{"size":1581,"mtime":1633396696411,"results":"24","hashOfConfig":"14"},{"size":823,"mtime":1632930881095,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tmi6sz",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\index.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\App.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\pages\\SavedBooks.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\pages\\SearchBooks.js",["52","53","54"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Jumbotron,\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport { searchGoogleBooks } from \"../utils/API\";\r\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\r\nimport { SAVE_BOOK } from \"../utils/mutations\";\r\n\r\nconst SearchBooks = () => {\r\n  // create state for holding returned google api data\r\n  const [searchedBooks, setSearchedBooks] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  // create state to hold saved bookId values\r\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\r\n\r\n  const [saveBook, { error }] = useMutation(SAVE_BOOK);\r\n\r\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBookIds(savedBookIds);\r\n  });\r\n\r\n  // create method to search for books and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"something went wrong!\");\r\n      }\r\n\r\n      const { items } = await response.json();\r\n\r\n      const bookData = items.map((book) => ({\r\n        bookId: book.id,\r\n        authors: book.volumeInfo.authors || [\"No author to display\"],\r\n        title: book.volumeInfo.title,\r\n        description: book.volumeInfo.description,\r\n        image: book.volumeInfo.imageLinks?.thumbnail || \"\",\r\n      }));\r\n\r\n      setSearchedBooks(bookData);\r\n      setSearchInput(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a book to our database\r\n  const handleSaveBook = async (bookId) => {\r\n    // find the book in `searchedBooks` state by the matching id\r\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const { data } = await saveBook({\r\n        variables: { bookData: { ...bookToSave } },\r\n      });\r\n      console.log(savedBookIds);\r\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className=\"text-light bg-dark\">\r\n        <Container>\r\n          <h1>Search for Books!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name=\"searchInput\"\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type=\"text\"\r\n                  size=\"lg\"\r\n                  placeholder=\"Search for a book\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type=\"submit\" variant=\"success\" size=\"lg\">\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBooks.length\r\n            ? `Viewing ${searchedBooks.length} results:`\r\n            : \"Search for a book to begin\"}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBooks.map((book) => {\r\n            return (\r\n              <Card key={book.bookId} border=\"dark\">\r\n                {book.image ? (\r\n                  <Card.Img\r\n                    src={book.image}\r\n                    alt={`The cover for ${book.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{book.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {book.authors}</p>\r\n                  <Card.Text>{book.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBookIds?.some(\r\n                        (savedBookId) => savedBookId === book.bookId\r\n                      )}\r\n                      className=\"btn-block btn-info\"\r\n                      onClick={() => handleSaveBook(book.bookId)}\r\n                    >\r\n                      {savedBookIds?.some(\r\n                        (savedBookId) => savedBookId === book.bookId\r\n                      )\r\n                        ? \"This book has already been saved!\"\r\n                        : \"Save this Book!\"}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBooks;\r\n","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\SignupForm.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\components\\LoginForm.js",["55","56"],"// see SignupForm.js for comments\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { LOGIN_USER } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nconst LoginForm = (props) => {\r\n  const [userFormData, setUserFormData] = useState({ email: \"\", password: \"\" });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [loginUser, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    try {\r\n      const { data } = await loginUser({\r\n        variables: { ...userFormData },\r\n      });\r\n\r\n      Auth.loginUser(data.loginUser.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert\r\n          dismissible\r\n          onClose={() => setShowAlert(false)}\r\n          show={showAlert}\r\n          variant=\"danger\"\r\n        >\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Your email\"\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Email is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Your password\"\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is required!\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type=\"submit\"\r\n          variant=\"success\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\queries.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\auth.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\API.js",[],"C:\\Users\\Alexander\\Desktop\\class-repo-activities\\21-MERN\\02-Homework\\Develop\\client\\src\\utils\\localStorage.js",[],{"ruleId":"57","severity":1,"message":"58","line":14,"column":10,"nodeType":"59","messageId":"60","endLine":14,"endColumn":27},{"ruleId":"57","severity":1,"message":"61","line":27,"column":22,"nodeType":"59","messageId":"60","endLine":27,"endColumn":27},{"ruleId":"57","severity":1,"message":"62","line":82,"column":15,"nodeType":"59","messageId":"60","endLine":82,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":13,"column":23,"nodeType":"59","messageId":"60","endLine":13,"endColumn":28},{"ruleId":"57","severity":1,"message":"62","line":13,"column":30,"nodeType":"59","messageId":"60","endLine":13,"endColumn":34},"no-unused-vars","'searchGoogleBooks' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'data' is assigned a value but never used."]